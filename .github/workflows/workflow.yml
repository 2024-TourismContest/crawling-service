name: CI/CD for Crawling Service

on:
  push:
    branches: [ main ]

# 실행될 작업(Job)들을 정의
jobs:
  # 1. 빌드 및 이미지 푸시 작업
  build-and-push:
    name: Build and Push to Docker Hub
    # 이 작업은 self-hosted runner에서 실행됩니다.
    runs-on: self-hosted

    steps:
      # 1단계: 소스 코드 체크아웃
      - name: Checkout source code
        uses: actions/checkout@v4

      # 2단계: JDK 17 설정 (Gradle 빌드를 위해 필요)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3단계: Spring Boot 애플리케이션 빌드 (JAR 파일 생성)
      - name: Build with Gradle
        run: ./gradlew bootJar

      # 4단계: Docker Hub 로그인
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      # 5단계: Docker 이미지 빌드 및 푸시
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          # 태그를 2개(latest, 커밋해시)로 지정하여 푸시
          tags: |
            mschoi6641/crawling-service:latest
            mschoi6641/crawling-service:${{ github.sha }}

  # 2. 배포 작업
  deploy:
    name: Deploy to Server
    # build-and-push 작업이 성공해야만 실행
    needs: build-and-push
    runs-on: self-hosted

    steps:
      # 1단계: 소스 코드 체크아웃 (배포 스크립트를 사용하기 위해)
      - name: Checkout source code
        uses: actions/checkout@v4

      # 2단계: 배포 스크립트 실행
      - name: Run deploy script
        # deploy.sh 스크립트에 이미지 태그(커밋 해시)를 인자로 전달하여 실행
        run: bash ./scripts/deploy.sh ${{ github.sha }}