name: Crawling-Service Blue–Green CI/CD

on:
  pull_request:
    types: [ closed ]
    branches: [ main ]

jobs:
  build-and-push:
    if: github.event.pull_request.merged == true
    runs-on: [ self-hosted, crawler ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Ensure resources folder exists
        run: mkdir -p src/main/resources

      - name: Copy application.yml from env directory
        run: |
          cp /home/mschoi/Desktop/tourismContest/Yaguhang-RE/crawling-service/env/application.yml \
            src/main/resources/application.yml

      - name: Build JAR
        run: ./gradlew clean bootJar --no-daemon

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Docker Image
        run: |
          docker-compose build
          docker-compose push

  deploy:
    name: SSH Blue–Green Deploy on Self-Hosted
    needs: build-and-push
    runs-on: [ self-hosted, crawler ]

    steps:
      - name: Run Blue–Green deploy script on server
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no \
            ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} -p 30022 << 'EOF'
            set -e
            BASE_DIR=/home/mschoi/Desktop/tourismContest/Yaguhang-RE/crawling-service
            cd "$BASE_DIR"

            # 1) 현재 구동 중인 스택 감지
            if docker ps --filter "name=crawler-blue" --format "{{.Names}}" | grep -q crawler-blue; then
              CURRENT=blue; TARGET=green
            else
              CURRENT=green; TARGET=blue
            fi

            echo "[DEPLOY] Switching from \$CURRENT to \$TARGET …"

            # 2) 새 스택 배포
            docker-compose -f docker-compose.\$TARGET.yml pull
            docker-compose -f docker-compose.\$TARGET.yml up -d

            # 3) 로컬 Nginx upstream 토글
            sudo sed -i \
              "s|server crawler-\$CURRENT:8443;|server crawler-\$TARGET:8443;|g" \
              /etc/nginx/sites-available/default
            sudo nginx -s reload

            # 4) 이전 스택 정리
            docker-compose -f docker-compose.\$CURRENT.yml down

            echo "[DEPLOY] Crawling-Service deployed as \$TARGET"
          EOF